---
import Button from "./Button.astro";

interface Props {
  title?: string;
  lead?: string;
  ctaText?: string;
  action?: string;
  method?: "post" | "get";
  /** "section" = default (uses global .container)
   *  "card"    = embedded in a panel (no container padding, transparent bg)
   */
  variant?: "section" | "card";
}

const {
  title = "Get in Touch",
  lead = "Have a question or ready to schedule your consultation? Send us a message—we’ll get back to you.",
  ctaText = "Submit",
  action = "#",
  method = "post",
  variant = "section",
} = Astro.props as Props;
---

<section
  class={`contact ${variant === "card" ? "contact--card" : ""}`}
  aria-labelledby="contact-title"
>
  <div class="container">
    <header class="contact__header">
      <h2 id="contact-title">{title}</h2>
      <p class="contact__lead">{lead}</p>
    </header>

    <form class="contact__form" action={action} method={method} novalidate>
      <div class="contact__grid">
        <!-- Full name -->
        <div class="contact__field">
          <label for="contact-name" class="contact__label">Full name</label>
          <input
            id="contact-name"
            name="name"
            type="text"
            placeholder="Full name"
            class="contact__input"
            autocomplete="name"
            required
          />
        </div>

        <!-- Phone -->
        <div class="contact__field">
          <label for="contact-phone" class="contact__label">Phone</label>
          <input
            id="contact-phone"
            name="phone"
            type="tel"
            placeholder="Phone"
            class="contact__input"
            autocomplete="tel"
          />
        </div>

        <!-- Email -->
        <div class="contact__field">
          <label for="contact-email" class="contact__label">Email</label>
          <input
            id="contact-email"
            name="email"
            type="email"
            placeholder="Email"
            class="contact__input"
            autocomplete="email"
            required
          />
        </div>

        <!-- How did you hear about us? -->
        <div class="contact__field">
          <label for="contact-ref" class="contact__label"
            >How did you hear about us?</label
          >
          <input
            id="contact-ref"
            name="referrer"
            type="text"
            placeholder="Google"
            class="contact__input"
          />
        </div>

        <!-- Message -->
        <div class="contact__field contact__field--span2">
          <label for="contact-msg" class="contact__label"
            >Write your message</label
          >
          <textarea
            id="contact-msg"
            name="message"
            rows="6"
            placeholder="Message"
            class="contact__textarea"></textarea>
        </div>

        <!-- Actions -->
        <div class="contact__actions contact__field--span2">
          <Button color="primary" type="submit">{ctaText}</Button>
        </div>
      </div>
    </form>
  </div>
</section>

<style>
  /* Section shell */
  .contact {
    background: var(--neutral-lightest);
  }

  .contact__header {
    text-align: left;
    margin-bottom: clamp(20px, 4vw, 28px);
  }

  .contact__lead {
    margin-top: 8px;
    max-width: 68ch;
    font-family: var(--ff-body);
    font-size: var(--fs-body-r);
    line-height: 1.6;
    color: var(--text);
  }

  .contact__form {
    margin-top: clamp(12px, 2vw, 16px);
  }

  /* Grid */
  .contact__grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 16px;
  }

  .contact__field {
    display: grid;
    gap: 6px;
  }

  .contact__label {
    font-family: var(--ff-body);
    font-size: var(--fs-body-r);
    color: var(--primary);
  }

  .contact__input,
  .contact__textarea {
    width: 100%;
    border: 1px solid var(--grey-20);
    background: var(--white);
    color: var(--text);
    font-family: var(--ff-body);
    font-size: var(--fs-body-r);
    line-height: 1.4;
    padding: 14px 16px;
    border-radius: 4px;
  }

  .contact__input::placeholder,
  .contact__textarea::placeholder {
    color: var(--grey-40);
  }

  .contact__input:focus-visible,
  .contact__textarea:focus-visible {
    outline: 2px solid var(--secondary);
    outline-offset: 1px;
    border-color: var(--secondary);
  }

  .contact__textarea {
    resize: vertical;
    min-height: 180px;
  }

  .contact__actions {
    display: flex;
    justify-content: center;
    padding-top: 4px;
  }

  /* Desktop layout */
  @media (min-width: 900px) {
    .contact__grid {
      grid-template-columns: 1fr 1fr;
      gap: 24px;
    }
    .contact__field--span2 {
      grid-column: 1 / -1;
    }
    .contact__actions {
      justify-content: flex-start;
    }
  }

  /* ===== Card variant overrides (for split section) ===== */
  .contact--card {
    background: transparent;
  }
  .contact--card .container {
    padding: 0;
  } /* neutralize global container padding */
  .contact--card .contact__header {
    margin-bottom: 16px;
    text-align: left;
  }
  .contact--card .contact__actions {
    justify-content: flex-start;
  }
</style>
