---
interface ImageItem {
  src: string;
  alt?: string;
}
interface Props {
  images: ImageItem[];
  gap?: number;
  circleBg?: string;
}
const {
  images = [],
  gap = 16,
  circleBg = "rgba(255, 255, 255, 0.28)", // translucent white by default
} = Astro.props;

const carouselId = `crs-${Math.random().toString(36).slice(2, 8)}`;
---

<section class="carousel-section theme-dark">
  <div
    class="carousel"
    data-carousel-id={carouselId}
    style={`--gap:${gap}px; --circle-bg:${circleBg};`}
  >
    <div
      class="viewport"
      role="region"
      aria-roledescription="carousel"
      aria-label="Image carousel"
      tabindex="0"
    >
      <!-- Prev button -->
      <button class="car-nav car-nav--prev" aria-label="Previous" data-dir="-1">
        <svg
          viewBox="0 0 24 24"
          width="20"
          height="20"
          aria-hidden="true"
          class="icon"
        >
          <path
            d="M14.5 18 9.5 12l5-6"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
        </svg>
      </button>

      <ul class="track" role="list">
        {
          images.map((img) => (
            <li class="slide" role="group">
              <img loading="lazy" src={img.src} alt={img.alt ?? ""} />
            </li>
          ))
        }
      </ul>

      <!-- Next button -->
      <button class="car-nav car-nav--next" aria-label="Next" data-dir="1">
        <svg
          viewBox="0 0 24 24"
          width="20"
          height="20"
          aria-hidden="true"
          class="icon"
        >
          <path
            d="m9.5 6 5 6-5 6"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
        </svg>
      </button>
    </div>
  </div>
</section>

<style>
  /* ===== Section / Theme ===== */
  .carousel-section {
    padding: 4rem 1rem;
    display: flex;
    justify-content: center;
  }

  /* .carousel-section.theme-dark {
    background: #0f0f0f;
    color: #eaeaea;
  } */

  /* ===== Carousel layout ===== */
  .carousel {
    position: relative;
    width: 100%;
    max-width: 1200px;
  }

  .viewport {
    position: relative;
    overflow: hidden;
  }

  .track {
    display: flex;
    gap: var(--gap);
    list-style: none;
    padding: 0;
    margin: 0;
    scroll-behavior: smooth;
    justify-content: center;
  }

  /* ===== Slides ===== */
  .slide {
    flex: 0 0 calc((100% - (var(--gap) * 2)) / 3);
    position: relative;
  }

  .slide img {
    display: block;
    width: 100%;
    height: auto;
    border-radius: 4px;
    object-fit: cover;
    background: #1c1c1c;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.35);
  }

  /* ===== Arrows ===== */
  .car-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 44px;
    height: 44px;
    border-radius: 999px;
    background: #dddddd62; /* translucent circle */
    color: #222020b5; /* solid white icon */
    border: 1px solid rgba(255, 255, 255, 0.12);
    display: grid;
    place-items: center;
    cursor: pointer;
    z-index: 2;
    transition:
      transform 0.15s ease,
      background 0.15s ease,
      border-color 0.15s ease;
    backdrop-filter: saturate(120%) blur(0.5px);
  }

  .car-nav:hover {
    transform: translateY(-50%) scale(1.05);
    background: rgba(255, 255, 255, 0.831);
    border-color: rgba(255, 255, 255, 0.2);
  }

  .car-nav:active {
    transform: translateY(-50%) scale(0.98);
  }

  .car-nav--prev {
    left: calc(var(--gap) * 0.5);
  }

  .car-nav--next {
    right: calc(var(--gap) * 0.5);
  }

  /* Make sure SVG inherits currentColor */
  .icon {
    stroke: currentColor;
  }

  /* ===== Responsive ===== */
  @media (max-width: 900px) {
    .slide {
      flex: 0 0 calc((100% - var(--gap)) / 2);
    }
  }

  @media (max-width: 600px) {
    .slide {
      flex: 0 0 100%;
    }
  }
</style>

<script type="module">
  import { initAllCarousels } from "@/scripts/carousel.client.ts";
  initAllCarousels();
</script>
